import java.io.*;

public class Matrix implements Serializable {
    private double[][] data;

    public Matrix(int n, int m){
        data = new double[n][m];
    }

    public void save(String filename) throws IOException {
        ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(filename));
        oos.writeObject(this);
        oos.close();
    }

    public static Matrix read(String filename) throws IOException, ClassNotFoundException{
        ObjectInputStream ois = new ObjectInputStream(new FileInputStream(filename));
        Matrix matrix = (Matrix) ois.readObject();
        ois.close();
        return matrix;
    }

    public Matrix sum(Matrix m){
        if(this.data.length != m.data.length || this.data[0].length != m.data[0].length){
            return null;
        }
        //matricies do not have the same dimensions
        Matrix result = new Matrix(this.data.length, this.data[0].length);
        for (int i = 0; i < this.data.length ; i++) {
            for (int j = 0; j < this.data[i].length; j++) {
                result.data[i][j] = this.data[i][j] + m.data[i][j];
            }
        }
        return result;
    }

    public Matrix product(Matrix m){
        if(this.data.length != m.data[0].length){
            return null;
        }

        Matrix result = new Matrix(this.data.length, m.data[0].length);
        for (int i = 0; i < result.data.length; i++) {
            for (int j = 0; j < result.data[0].length; j++) {
                for (int k = 0; k < this.data[0].length; k++) {
                    result.data[i][j] += this.data[i][k] * m.data[k][j];
                }
            }
        }
        return result;
    }
}
